{"name": "test_get_user", "status": "broken", "statusDetails": {"message": "AttributeError: 'UserPage' object has no attribute 'get_logs'", "trace": "self = <tests.test_user_operations.TestUserOperations object at 0x000001F477BF1F40>\nuser_page = <pages.user_page.UserPage object at 0x000001F477B542C0>\ncreated_user = <config.data.user_data object at 0x000001F477C58D10>\n\n    def test_get_user(self, user_page, created_user):\n        with allure.step(\"Получить данные созданного профиля\"):\n            print(\"Получить данные созданного профиля...\")\n            response = user_page.get_user(created_user.username)\n            assert response.status_code == 200, response.text\n    \n            print(f\"Тест 'test_get_user' - Данные пользователя: {created_user.__dict__}\")\n    \n            with allure.step(\"Регистрация ответа\"):\n                allure.attach(response.text, name=\"Текст овтета\", attachment_type=allure.attachment_type.JSON)\n                allure.attach(str(response.headers), name=\"Заголовки\",\n                              attachment_type=allure.attachment_type.JSON)\n    \n            if response.headers.get('Content-Type') == 'application/json':\n                data = response.json()\n                print(f\"Полученные данные с сервера: {data}\")\n    \n                with allure.step(\"Проверка Json схемы\"):\n                    try:\n                        validate(instance=data, schema=user_schema)\n                    except ValidationError as e:\n                        pytest.fail(f\"Ошибка в валидации Json схемы: {e}\")\n    \n                with allure.step(\"Проверка соответствия данных пользователя\"):\n                    assert data['username'] == created_user.username, \"Имя пользователя не соответствует\"\n                    assert data['firstName'] == created_user.firstName, \"Имя не соответствует\"\n                    assert data['lastName'] == created_user.lastName, \"Фамилия не соответствует\"\n                    assert data['email'] == created_user.email, \"Email не соответствует\"\n                    assert data['phone'] == created_user.phone, \"Телефон не соответствует\"\n            else:\n                pytest.fail(\"Ответ не в формате JSON\")\n    \n        with allure.step(\"Прикрепление логов\"):\n>           logs = user_page.get_logs()\nE           AttributeError: 'UserPage' object has no attribute 'get_logs'\n\ntest_user_operations.py:76: AttributeError"}, "steps": [{"name": "Получить данные созданного профиля", "status": "passed", "steps": [{"name": "Регистрация ответа", "status": "passed", "attachments": [{"name": "Текст овтета", "source": "17a91dbe-3b18-455b-9da1-266199cc8f67-attachment.json", "type": "application/json"}, {"name": "Заголовки", "source": "e4a1b810-409b-4507-afad-50eb02263d9e-attachment.json", "type": "application/json"}], "start": 1719747674607, "stop": 1719747674608}, {"name": "Проверка Json схемы", "status": "passed", "start": 1719747674608, "stop": 1719747674610}, {"name": "Проверка соответствия данных пользователя", "status": "passed", "start": 1719747674610, "stop": 1719747674610}], "start": 1719747673535, "stop": 1719747674610}, {"name": "Прикрепление логов", "status": "broken", "statusDetails": {"message": "AttributeError: 'UserPage' object has no attribute 'get_logs'\n", "trace": "  File \"C:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py\", line 76, in test_get_user\n    logs = user_page.get_logs()\n           ^^^^^^^^^^^^^^^^^^\n"}, "start": 1719747674610, "stop": 1719747674610}], "attachments": [{"name": "stdout", "source": "15e690b4-90ae-415d-897f-0421b791e9c2-attachment.txt", "type": "text/plain"}], "start": 1719747673535, "stop": 1719747674612, "uuid": "118a54af-ccbf-406d-8ef4-43f6ae9886cf", "historyId": "001f68e0f9c97eab6db29fb6fd8f801b", "testCaseId": "001f68e0f9c97eab6db29fb6fd8f801b", "fullName": "tests.test_user_operations.TestUserOperations#test_get_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('user_page', 'user_data', 'created_user')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_operations"}, {"name": "subSuite", "value": "TestUserOperations"}, {"name": "host", "value": "sanya"}, {"name": "thread", "value": "16608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_operations"}]}