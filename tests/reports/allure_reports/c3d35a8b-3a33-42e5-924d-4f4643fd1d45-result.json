{"name": "test_get_user", "status": "failed", "statusDetails": {"message": "AssertionError: User creation response does not contain user id\nassert 'id' in {'code': 200, 'message': '5', 'type': 'unknown'}", "trace": "user_page = <pages.user_page.UserPage object at 0x00000203D63C4E00>\nuser_data = <config.data.user_data object at 0x00000203D63C4F50>\n\n    @pytest.fixture(scope=\"module\")\n    def created_user(user_page, user_data):\n        response = user_page.create_user(user_data.__dict__)\n        assert response.status_code == 200, response.text\n        # Проверяем, что ответ содержит данные пользователя и возвращаем их, если это так\n        user_response_data = json.loads(response.text)\n        # Проверяем, что response содержит id пользователя\n>       assert 'id' in user_response_data, \"User creation response does not contain user id\"\nE       AssertionError: User creation response does not contain user id\nE       assert 'id' in {'code': 200, 'message': '5', 'type': 'unknown'}\n\n..\\conftest.py:21: AssertionError"}, "start": 1719738655481, "stop": 1719738655481, "uuid": "e9e97ade-4e2d-4fb2-ba55-3e30a63407bd", "historyId": "001f68e0f9c97eab6db29fb6fd8f801b", "testCaseId": "001f68e0f9c97eab6db29fb6fd8f801b", "fullName": "tests.test_user_operations.TestUserOperations#test_get_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('user_page', 'user_data', 'created_user')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_operations"}, {"name": "subSuite", "value": "TestUserOperations"}, {"name": "host", "value": "sanya"}, {"name": "thread", "value": "14288-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_operations"}]}