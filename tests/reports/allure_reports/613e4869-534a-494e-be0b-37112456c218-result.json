{"name": "test_get_user", "status": "failed", "statusDetails": {"message": "AssertionError: Имя не соответствует\nassert 'Эмиль' == 'Доброслав'\n  \n  - Доброслав\n  + Эмиль", "trace": "self = <tests.test_user_operations.TestUserOperations object at 0x0000022A526AD580>\nuser_page = <pages.user_page.UserPage object at 0x0000022A5507CDA0>\ncreated_user = <config.data.user_data object at 0x0000022A5507D130>\n\n    def test_get_user(self, user_page, created_user):\n        with allure.step(\"Получить данные созданного профиля\"):\n            response = user_page.get_user(created_user.username)\n            assert response.status_code == 200, response.text\n    \n            # Выводим данные пользователя в логах\n            print(f\"Тест 'test_get_user' - Данные пользователя: {created_user.__dict__}\")\n    \n            with allure.step(\"Регистрация ответа\"):\n                allure.attach(response.text, name=\"Response Text\", attachment_type=allure.attachment_type.JSON)\n                allure.attach(str(response.headers), name=\"Response Headers\",\n                              attachment_type=allure.attachment_type.JSON)\n    \n            if response.headers.get('Content-Type') == 'application/json':\n                data = response.json()\n    \n                # Дополнительный вывод полученных данных с сервера\n                print(f\"Полученные данные с сервера: {data}\")\n    \n                with allure.step(\"Проверка Json схемы\"):\n                    try:\n                        validate(instance=data, schema=user_schema)\n                    except ValidationError as e:\n                        pytest.fail(f\"Ошибка в валидации Json схемы: {e}\")\n    \n                with allure.step(\"Проверка соответствия данных пользователя\"):\n                    assert data['username'] == created_user.username, \"Имя пользователя не соответствует\"\n>                   assert data['firstName'] == created_user.firstName, \"Имя не соответствует\"\nE                   AssertionError: Имя не соответствует\nE                   assert 'Эмиль' == 'Доброслав'\nE                     \nE                     - Доброслав\nE                     + Эмиль\n\ntest_user_operations.py:62: AssertionError"}, "steps": [{"name": "Получить данные созданного профиля", "status": "failed", "statusDetails": {"message": "AssertionError: Имя не соответствует\nassert 'Эмиль' == 'Доброслав'\n  \n  - Доброслав\n  + Эмиль\n", "trace": "  File \"C:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py\", line 62, in test_get_user\n    assert data['firstName'] == created_user.firstName, \"Имя не соответствует\"\n"}, "steps": [{"name": "Регистрация ответа", "status": "passed", "attachments": [{"name": "Response Text", "source": "6c85b608-fc93-4abf-abc1-c87164e9ed06-attachment.json", "type": "application/json"}, {"name": "Response Headers", "source": "396c9158-9667-4221-bfd4-bca050797487-attachment.json", "type": "application/json"}], "start": 1719739317014, "stop": 1719739317015}, {"name": "Проверка Json схемы", "status": "passed", "start": 1719739317015, "stop": 1719739317017}, {"name": "Проверка соответствия данных пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: Имя не соответствует\nassert 'Эмиль' == 'Доброслав'\n  \n  - Доброслав\n  + Эмиль\n", "trace": "  File \"C:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py\", line 62, in test_get_user\n    assert data['firstName'] == created_user.firstName, \"Имя не соответствует\"\n"}, "start": 1719739317018, "stop": 1719739317018}], "start": 1719739315861, "stop": 1719739317018}], "attachments": [{"name": "stdout", "source": "bc982c79-c363-456f-be96-ed7beb749a44-attachment.txt", "type": "text/plain"}], "start": 1719739315861, "stop": 1719739317019, "uuid": "09d31797-cd86-4956-893c-e179d65c984e", "historyId": "001f68e0f9c97eab6db29fb6fd8f801b", "testCaseId": "001f68e0f9c97eab6db29fb6fd8f801b", "fullName": "tests.test_user_operations.TestUserOperations#test_get_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('user_page', 'user_data', 'created_user')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_operations"}, {"name": "subSuite", "value": "TestUserOperations"}, {"name": "host", "value": "sanya"}, {"name": "thread", "value": "5632-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_operations"}]}