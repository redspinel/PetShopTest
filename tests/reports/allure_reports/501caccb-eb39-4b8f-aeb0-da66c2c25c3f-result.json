{"name": "test_get_nonexistent_user", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидаемый {'code': 404, 'type': 'unknown', 'message': 'User not found'}, получено {'code': 1, 'type': 'error', 'message': 'User not found'}\nassert {'code': 1, 'type': 'error', 'message': 'User not found'} == {'code': 404, 'type': 'unknown', 'message': 'User not found'}\n  \n  Common items:\n  {'message': 'User not found'}\n  Differing items:\n  {'type': 'error'} != {'type': 'unknown'}\n  {'code': 1} != {'code': 404}\n  \n  Full diff:\n    {\n  -     'code': 404,\n  ?             ^^^\n  +     'code': 1,\n  ?             ^\n        'message': 'User not found',\n  -     'type': 'unknown',\n  ?              ^^^^ ^^\n  +     'type': 'error',\n  ?              ^^^ ^\n    }", "trace": "self = <tests.test_user_operations.TestUserOperations object at 0x0000023D996B3860>\nuser_page = <pages.user_page.UserPage object at 0x0000023D997592B0>\n\n    def test_get_nonexistent_user(self, user_page):\n        with allure.step(\"Получение несуществующего пользователя\"):\n            username = \"Ryan Gosling\"\n            print(f\"Получение данных с несуществующим пользователем: {username}\")\n            response = user_page.get_user(username)\n            print(f\"Тело ответа: {response.text}\")\n            assert response.status_code == 404, response.text\n            if response.headers.get('Content-Type') == 'application/json':\n                response_json = response.json()\n                expected_response = json.loads(json.dumps(expected_nonexistent_user_response))\n    \n                print(f\"Ожидаемый результат: {expected_response}\")\n                print(f\"Фактический результат: {response_json}\")\n    \n>               assert response_json == expected_response, f\"Ожидаемый {expected_response}, получено {response_json}\"\nE               AssertionError: Ожидаемый {'code': 404, 'type': 'unknown', 'message': 'User not found'}, получено {'code': 1, 'type': 'error', 'message': 'User not found'}\nE               assert {'code': 1, 'type': 'error', 'message': 'User not found'} == {'code': 404, 'type': 'unknown', 'message': 'User not found'}\nE                 \nE                 Common items:\nE                 {'message': 'User not found'}\nE                 Differing items:\nE                 {'type': 'error'} != {'type': 'unknown'}\nE                 {'code': 1} != {'code': 404}\nE                 \nE                 Full diff:\nE                   {\nE                 -     'code': 404,\nE                 ?             ^^^\nE                 +     'code': 1,\nE                 ?             ^\nE                       'message': 'User not found',\nE                 -     'type': 'unknown',\nE                 ?              ^^^^ ^^\nE                 +     'type': 'error',\nE                 ?              ^^^ ^\nE                   }\n\ntest_user_operations.py:149: AssertionError"}, "steps": [{"name": "Получение несуществующего пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидаемый {'code': 404, 'type': 'unknown', 'message': 'User not found'}, получено {'code': 1, 'type': 'error', 'message': 'User not found'}\nassert {'code': 1, 'type': 'error', 'message': 'User not found'} == {'code': 404, 'type': 'unknown', 'message': 'User not found'}\n  \n  Common items:\n  {'message': 'User not found'}\n  Differing items:\n  {'type': 'error'} != {'type': 'unknown'}\n  {'code': 1} != {'code': 404}\n  \n  Full diff:\n    {\n  -     'code': 404,\n  ?             ^^^\n  +     'code': 1,\n  ?             ^\n        'message': 'User not found',\n  -     'type': 'unknown',\n  ?              ^^^^ ^^\n  +     'type': 'error',\n  ?              ^^^ ^\n    }\n", "trace": "  File \"C:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py\", line 149, in test_get_nonexistent_user\n    assert response_json == expected_response, f\"Ожидаемый {expected_response}, получено {response_json}\"\n"}, "start": 1719742910815, "stop": 1719742911927}], "attachments": [{"name": "stdout", "source": "baccc373-3c2b-4aa3-a7c7-4ebf5a76e7a0-attachment.txt", "type": "text/plain"}], "start": 1719742910815, "stop": 1719742911928, "uuid": "08734293-b0b0-4bd1-9150-ff1e8ffeed8c", "historyId": "920462bc36800d833457c42b1bd38699", "testCaseId": "920462bc36800d833457c42b1bd38699", "fullName": "tests.test_user_operations.TestUserOperations#test_get_nonexistent_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('user_page', 'user_data', 'created_user')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_operations"}, {"name": "subSuite", "value": "TestUserOperations"}, {"name": "host", "value": "sanya"}, {"name": "thread", "value": "8812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_operations"}]}