{"name": "test_get_nonexistent_user", "status": "broken", "statusDetails": {"message": "AttributeError: 'UserPage' object has no attribute 'get_logs'", "trace": "self = <tests.test_user_operations.TestUserOperations object at 0x000001F477BF3B00>\nuser_page = <pages.user_page.UserPage object at 0x000001F477B542C0>\n\n    def test_get_nonexistent_user(self, user_page):\n        with allure.step(\"Получение несуществующего пользователя\"):\n            username = \"Ryan Gosling\"\n            print(f\"Получение данных с несуществующим пользователем: {username}\")\n            response = user_page.get_user(username)\n            print(f\"Тело ответа: {response.text}\")\n            assert response.status_code == 404, response.text\n            if response.headers.get('Content-Type') == 'application/json':\n                response_json = response.json()\n                expected_response = json.loads(json.dumps(expected_nonexistent_user_response))\n    \n                print(f\"Ожидаемый результат: {expected_response}\")\n                print(f\"Фактический результат: {response_json}\")\n    \n                assert response_json == expected_response, f\"Ожидаемый {expected_response}, получено {response_json}\"\n            else:\n                pytest.skip(\"Ответ не в формате JSON\")\n    \n        with allure.step(\"Прикрепление данных после теста\"):\n            allure.attach(response.text, name=\"Текст ответа\", attachment_type=allure.attachment_type.JSON)\n            allure.attach(str(response.headers), name=\"Заголовки\", attachment_type=allure.attachment_type.JSON)\n    \n        with allure.step(\"Прикрепление логов\"):\n>           logs = user_page.get_logs()\nE           AttributeError: 'UserPage' object has no attribute 'get_logs'\n\ntest_user_operations.py:185: AttributeError"}, "steps": [{"name": "Получение несуществующего пользователя", "status": "passed", "start": 1719747679339, "stop": 1719747680455}, {"name": "Прикрепление данных после теста", "status": "passed", "attachments": [{"name": "Текст ответа", "source": "c7204fbc-c400-4181-b327-a87938d73d74-attachment.json", "type": "application/json"}, {"name": "Заголовки", "source": "8544db72-2d7a-4848-bbb0-7bacd53d841e-attachment.json", "type": "application/json"}], "start": 1719747680455, "stop": 1719747680456}, {"name": "Прикрепление логов", "status": "broken", "statusDetails": {"message": "AttributeError: 'UserPage' object has no attribute 'get_logs'\n", "trace": "  File \"C:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py\", line 185, in test_get_nonexistent_user\n    logs = user_page.get_logs()\n           ^^^^^^^^^^^^^^^^^^\n"}, "start": 1719747680456, "stop": 1719747680456}], "attachments": [{"name": "stdout", "source": "25ea9471-3638-4696-88e5-dc99a7243a39-attachment.txt", "type": "text/plain"}], "start": 1719747679339, "stop": 1719747680457, "uuid": "bc23af53-5e07-4d4e-a59b-c9fcfb7d5f5e", "historyId": "920462bc36800d833457c42b1bd38699", "testCaseId": "920462bc36800d833457c42b1bd38699", "fullName": "tests.test_user_operations.TestUserOperations#test_get_nonexistent_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('user_page', 'user_data', 'created_user')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_operations"}, {"name": "subSuite", "value": "TestUserOperations"}, {"name": "host", "value": "sanya"}, {"name": "thread", "value": "16608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_operations"}]}