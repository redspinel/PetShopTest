{"name": "test_get_nonexistent_user", "status": "broken", "statusDetails": {"message": "_pytest.fixtures.FixtureLookupError: ('user_page', <FixtureRequest for <Function test_get_nonexistent_user>>)", "trace": "file C:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py, line 98\n      def test_get_nonexistent_user(self):\nE       fixture 'user_page' not found\n>       available fixtures: _session_faker, _xunit_setup_class_fixture_TestUserAPI, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, faker, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nC:\\Users\\bbuld\\PycharmProjects\\PetShop\\tests\\test_user_operations.py:98"}, "start": 1719518208360, "stop": 1719518208360, "uuid": "598b81a6-b958-435d-8340-71fee07150a3", "historyId": "4118bc5be8cb5260d0f19dec13f962ec", "testCaseId": "4118bc5be8cb5260d0f19dec13f962ec", "fullName": "tests.test_user_operations.TestUserAPI#test_get_nonexistent_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('user_page')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_operations"}, {"name": "subSuite", "value": "TestUserAPI"}, {"name": "host", "value": "sanya"}, {"name": "thread", "value": "13572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_operations"}]}